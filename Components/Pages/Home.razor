@page "/"
@using m2.Models
@inject Services.UserService UserService
@inject NavigationManager NavigationManager

<div class="container mt-2">
    <h1 class="text-center mb-5 text-black">Dashboard</h1>
    <h3 class="mb-4">Welcome, <span class="text-black">Sandhya Timalsena</span>!</h3>

    <!-- Dashboard Summary -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card text-center shadow border-0" style="background-color: #4a148c; color: #fff;">
                <div class="card-body">
                    <h5>Total Inflows</h5>
                    <h3>@cashInflows:$</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-center shadow border-0" style="background-color: #4a148c; color: #fff;">
                <div class="card-body">
                    <h5>Total Outflows</h5>
                    <h3>@cashOutflows:$</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-center shadow border-0" style="background-color: #4a148c; color: #fff;">
                <div class="card-body">
                    <h5>Remaining Debts</h5>
                    <h3>@totalDebts:$</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-center shadow border-0" style="background-color: #4a148c; color: #fff;">
                <div class="card-body">
                    <h5>Cleared Debts</h5>
                    <h3>@Data.Debts.Where(d => d.IsCleared).Sum(d => d.Amount):$</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter by Date -->
    <div class="row mb-4">
        <div class="col-md-6">
            <label for="startDate" class="form-label">Start Date</label>
            <input type="date" id="startDate" class="form-control" @bind="startDate" />
        </div>
        <div class="col-md-6">
            <label for="endDate" class="form-label">End Date</label>
            <input type="date" id="endDate" class="form-control" @bind="endDate" />
        </div>
    </div>
    <div class="text-end mb-4">
        <button class="btn btn-primary" style="background-color: #4a148c; border: none;" @onclick="FilterByDate">Filter</button>
    </div>

    <!-- Highest and Lowest Transactions Table -->
    <h2 class="mb-4 text-black">Highest and Lowest Transactions</h2>
    <div class="table-responsive mb-5">
        <table class="table table-striped">
            <thead class="text-light" style="background-color: #4a148c;">
                <tr>
                    <th>Category</th>
                    <th>Highest</th>
                    <th>Lowest</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Cash Inflows</td>
                    <td>@highestInflow:$</td>
                    <td>@lowestInflow:$</td>
                </tr>
                <tr>
                    <td>Cash Outflows</td>
                    <td>@highestOutflow:$</td>
                    <td>@lowestOutflow:$</td>
                </tr>
                <tr>
                    <td>Debts</td>
                    <td>@highestDebt:$</td>
                    <td>@lowestDebt:$</td>
                </tr>
            </tbody>
        </table>
    </div>

    <!-- Recent Transactions Table -->
    <h2 class="mb-4 text-black">Recent Transactions</h2>
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="text-light" style="background-color: #4a148c;">
                <tr>
                    <th>ID</th>
                    <th>Description</th>
                    <th>Debit</th>
                    <th>Credit</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @if (Data.Transactions.Any())
                {
                    @foreach (var transaction in Data.Transactions.Take(3))
                    {
                        <tr>
                            <td>@transaction.Id</td>
                            <td>@transaction.Description</td>
                            <td>@transaction.Debit:$</td>
                            <td>@transaction.Credit:$</td>
                            <td>@transaction.Date.ToString("MM/dd/yyyy")</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center">No transactions found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pending Debts -->
    <h2 class="mt-5 mb-4 text-black">Pending Debts</h2>
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="text-light" style="background-color: #4a148c;">
                <tr>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var debt in Data.Debts.Where(d => !d.IsCleared))
                {
                    <tr>
                        <td>@debt.Description</td>
                        <td>@debt.Amount:$</td>
                        <td>@debt.Date.ToString("MM/dd/yyyy")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- View All Transactions -->
    <div class="text-center mt-4">
        <a href="/transactions" class="btn btn-secondary" style="background-color: #4a148c; color: #fff; border: none;">View All Transactions</a>
    </div>
</div>

@code {
    private AppData Data;
    private decimal totalAmount;
    private decimal cashInflows;
    private decimal cashOutflows;
    private decimal totalDebts;
    private decimal highestInflow;
    private decimal lowestInflow;
    private decimal highestOutflow;
    private decimal lowestOutflow;
    private decimal highestDebt;
    private decimal lowestDebt;

    private DateTime startDate = DateTime.Now.AddMonths(-1); // Default to last month
    private DateTime endDate = DateTime.Now; // Default to today

    protected override void OnInitialized()
    {
        Data = UserService.LoadData();
        FilterByDate(); // Apply the default filter
    }

    private void FilterByDate()
    {
        var filteredTransactions = Data.Transactions.Where(t => t.Date >= startDate && t.Date <= endDate).ToList();

        cashInflows = filteredTransactions.Sum(t => t.Credit);
        cashOutflows = filteredTransactions.Sum(t => t.Debit);

        var filteredDebts = Data.Debts?.Where(d => d.Date >= startDate && d.Date <= endDate).ToList() ?? new List<Debt>();

        totalDebts = filteredDebts.Sum(d => d.Amount);

        highestInflow = filteredTransactions.Where(t => t.Credit > 0).DefaultIfEmpty().Max(t => t.Credit);
        lowestInflow = filteredTransactions.Where(t => t.Credit > 0).DefaultIfEmpty().Min(t => t.Credit);
        highestOutflow = filteredTransactions.Where(t => t.Debit > 0).DefaultIfEmpty().Max(t => t.Debit);
        lowestOutflow = filteredTransactions.Where(t => t.Debit > 0).DefaultIfEmpty().Min(t => t.Debit);

        highestDebt = filteredDebts.Any() ? filteredDebts.Max(d => d.Amount) : 0;
        lowestDebt = filteredDebts.Any() ? filteredDebts.Min(d => d.Amount) : 0;
    }
}
